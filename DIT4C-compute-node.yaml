heat_template_version: 2013-05-23


description: 'NeCTAR Template for creating a DIT4C compute node on ephemeral storage.'


parameters:

  InstanceSize:
    type: string
    label: Instance Size
    description: Size of the instance to be created.
    default: m1.small
    constraints:
      - allowed_values: [m1.small, m1.medium, m1.large, m1.xlarge, m1.xxlarge]

  ImageID:
    type: string
    label: Image ID
    description: ID of the CoreOS image to use for the instance to be created
    default: c25008d9-e229-4768-bf1f-7f476486d126

  AvailabilityZone:
    type: string
    description: The NeCTAR zone in which the VM is to run
    default: sa
    constraints:
     - allowed_values: [melbourne, monash, sa, qld, NCI]   

  PortalURL:
    type: string
    label: Portal URL
    description: The DIT4C Portal URL (scheme, host and port only) 
    default: https://dit4c.metadata.net
    constraints:
      - length: { min: 8 }

  GitHubAccount:
    type: string
    label: GitHub Account
    description:
      Name of GitHub account to allow admin SSH access to the instance.
    constraints:
      - length: { min: 1 }

resources:

  ComputeNodeSecGroup:
    type: AWS::EC2::SecurityGroup
    properties:
      GroupDescription: "Enable proxy and management ports"
      SecurityGroupIngress:
        -
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "8080"
          ToPort: "8080"
          CidrIp: "0.0.0.0/0"

  ComputeNodeInstance:
    type: OS::Nova::Server
    properties:
      availability_zone: { Ref: AvailabilityZone }
      image: { Ref: ImageID }
      flavor: { Ref: InstanceSize }
      #key_name: { Ref: KeyName }
      security_groups: [{Ref: ComputeNodeSecGroup}]
      user_data_format: RAW
      config_drive: "true"
      user_data:
        str_replace:
          template: |
            #cloud-config
            coreos:
              etcd:
                addr: $private_ipv4:4001
                peer-addr: $private_ipv4:7001
              update:
                reboot-strategy: "off"
              units:
              - name: format-ephemeral.service
                command: start
                content: |
                  [Unit]
                  Description=Formats the ephemeral drive
                  [Service]
                  Type=oneshot
                  RemainAfterExit=yes
                  ExecStart=/usr/sbin/wipefs -f /dev/vdb
                  ExecStart=/usr/sbin/mkfs.btrfs -f /dev/vdb
              - name: var-lib-docker.mount
                command: start
                content: |
                  [Unit]
                  Description=Mount ephemeral to /var/lib/docker
                  Requires=format-ephemeral.service
                  After=format-ephemeral.service
                  Before=docker.service
                  [Mount]
                  What=/dev/vdb
                  Where=/var/lib/docker
                  Type=btrfs
              - name: deploy-dit4c.service
                command: start
                content: |
                  [Unit]
                  Description=Setup compute node
                  [Service]
                  Type=oneshot
                  RemainAfterExit=yes
                  ExecStart=/usr/bin/docker run -ti --name dit4c_deploy_compute --rm -e PORTAL_URL=$portalURL -v /var/run/docker.sock:/var/run/docker.sock dit4c/dit4c-deploy-compute
              - name: dit4c-compute-node.service
                enable: true
                command: start
                content: |
                  [Unit]
                  Description=DIT4C Compute Node services
                  After=docker.service
                  
                  [Service]
                  TimeoutStartSec=0
                  ExecStart=/usr/bin/docker start dit4c_gatehouse
                  ExecStart=/usr/bin/docker start dit4c_machineshop
                  ExecStop=/usr/bin/docker stop dit4c_gatehouse
                  ExecStop=/usr/bin/docker stop dit4c_machineshop
            users:
              - name: $githubAccount
                groups:
                  - sudo
                  - docker
                coreos-ssh-import-github: $githubAccount
          params:
            $portalURL: { get_param: PortalURL }
            $githubAccount: { get_param: GitHubAccount }

outputs:
  InstanceIP:
    description: Public IP address of the newly created compute node.
    value: { get_attr: [ComputeNodeInstance, first_address] }